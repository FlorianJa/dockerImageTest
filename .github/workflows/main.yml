name: .NET 8 MSTest CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  checks: write

jobs:

  build:
    runs-on: ubuntu-latest
    outputs:
      build-artifact: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore --configuration Release

  test:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Run Tests with Coverage and TRX
      run: >
        dotnet test
        --configuration Release
        --results-directory TestResults
        --collect "XPlat Code Coverage;Format=cobertura"
        --logger "trx;LogFileName=test_results.trx"

    - name: Publish Test Results (TRX)
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: MSTest Report
        path: '**/test_results.trx'
        reporter: dotnet-trx
        fail-on-error: true
        fail-on-empty: true
        
    - name: Upload TRX & Coverage
      uses: actions/upload-artifact@v4
      with:
        name: test-artifacts
        path: |
          TestResults/
          **/coverage.cobertura.xml

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate Coverage Report
      run: >
        reportgenerator
        -reports:"**/coverage.cobertura.xml"
        -targetdir:"CoverageReport"
        -reporttypes:Html

    - name: Upload Coverage Report
      uses: actions/upload-artifact@v4
      with:
        name: CodeCoverageReport
        path: CoverageReport


  
